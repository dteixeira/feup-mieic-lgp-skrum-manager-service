//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTester.ProjectService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectService.IProjectService")]
    public interface IProjectService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateProject", ReplyAction="http://tempuri.org/IProjectService/CreateProjectResponse")]
        ServiceDataTypes.Project CreateProject(ServiceDataTypes.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteProject", ReplyAction="http://tempuri.org/IProjectService/DeleteProjectResponse")]
        bool DeleteProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetProjectByID", ReplyAction="http://tempuri.org/IProjectService/GetProjectByIDResponse")]
        ServiceDataTypes.Project GetProjectByID(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateProject", ReplyAction="http://tempuri.org/IProjectService/UpdateProjectResponse")]
        ServiceDataTypes.Project UpdateProject(ServiceDataTypes.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateSprint", ReplyAction="http://tempuri.org/IProjectService/CreateSprintResponse")]
        ServiceDataTypes.Sprint CreateSprint(ServiceDataTypes.Sprint sprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteSprint", ReplyAction="http://tempuri.org/IProjectService/DeleteSprintResponse")]
        bool DeleteSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetSprintByID", ReplyAction="http://tempuri.org/IProjectService/GetSprintByIDResponse")]
        ServiceDataTypes.Sprint GetSprintByID(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateSprint", ReplyAction="http://tempuri.org/IProjectService/UpdateSprintResponse")]
        ServiceDataTypes.Sprint UpdateSprint(ServiceDataTypes.Sprint sprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetSprintsInProject", ReplyAction="http://tempuri.org/IProjectService/GetSprintsInProjectResponse")]
        ServiceDataTypes.Sprint[] GetSprintsInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GiveRole", ReplyAction="http://tempuri.org/IProjectService/GiveRoleResponse")]
        ServiceDataTypes.Role GiveRole(ServiceDataTypes.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetClosedSprints", ReplyAction="http://tempuri.org/IProjectService/GetClosedSprintsResponse")]
        ServiceDataTypes.Sprint[] GetClosedSprints(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateMeeting", ReplyAction="http://tempuri.org/IProjectService/CreateMeetingResponse")]
        ServiceDataTypes.Meeting CreateMeeting(ServiceDataTypes.Meeting meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteMeeting", ReplyAction="http://tempuri.org/IProjectService/DeleteMeetingResponse")]
        bool DeleteMeeting(int meetingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetMeetingByID", ReplyAction="http://tempuri.org/IProjectService/GetMeetingByIDResponse")]
        ServiceDataTypes.Meeting GetMeetingByID(int meetingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateMeeting", ReplyAction="http://tempuri.org/IProjectService/UpdateMeetingResponse")]
        ServiceDataTypes.Meeting UpdateMeeting(ServiceDataTypes.Meeting meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetMeetingsInProject", ReplyAction="http://tempuri.org/IProjectService/GetMeetingsInProjectResponse")]
        ServiceDataTypes.Meeting[] GetMeetingsInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetMeetingsOnDate", ReplyAction="http://tempuri.org/IProjectService/GetMeetingsOnDateResponse")]
        ServiceDataTypes.Meeting[] GetMeetingsOnDate(System.DateTime date, int projectID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectServiceChannel : ServiceTester.ProjectService.IProjectService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectServiceClient : System.ServiceModel.ClientBase<ServiceTester.ProjectService.IProjectService>, ServiceTester.ProjectService.IProjectService {
        
        public ProjectServiceClient() {
        }
        
        public ProjectServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceDataTypes.Project CreateProject(ServiceDataTypes.Project project) {
            return base.Channel.CreateProject(project);
        }
        
        public bool DeleteProject(int projectID) {
            return base.Channel.DeleteProject(projectID);
        }
        
        public ServiceDataTypes.Project GetProjectByID(int projectID) {
            return base.Channel.GetProjectByID(projectID);
        }
        
        public ServiceDataTypes.Project UpdateProject(ServiceDataTypes.Project project) {
            return base.Channel.UpdateProject(project);
        }
        
        public ServiceDataTypes.Sprint CreateSprint(ServiceDataTypes.Sprint sprint) {
            return base.Channel.CreateSprint(sprint);
        }
        
        public bool DeleteSprint(int sprintID) {
            return base.Channel.DeleteSprint(sprintID);
        }
        
        public ServiceDataTypes.Sprint GetSprintByID(int sprintID) {
            return base.Channel.GetSprintByID(sprintID);
        }
        
        public ServiceDataTypes.Sprint UpdateSprint(ServiceDataTypes.Sprint sprint) {
            return base.Channel.UpdateSprint(sprint);
        }
        
        public ServiceDataTypes.Sprint[] GetSprintsInProject(int projectID) {
            return base.Channel.GetSprintsInProject(projectID);
        }
        
        public ServiceDataTypes.Role GiveRole(ServiceDataTypes.Role role) {
            return base.Channel.GiveRole(role);
        }
        
        public ServiceDataTypes.Sprint[] GetClosedSprints(int projectID) {
            return base.Channel.GetClosedSprints(projectID);
        }
        
        public ServiceDataTypes.Meeting CreateMeeting(ServiceDataTypes.Meeting meeting) {
            return base.Channel.CreateMeeting(meeting);
        }
        
        public bool DeleteMeeting(int meetingID) {
            return base.Channel.DeleteMeeting(meetingID);
        }
        
        public ServiceDataTypes.Meeting GetMeetingByID(int meetingID) {
            return base.Channel.GetMeetingByID(meetingID);
        }
        
        public ServiceDataTypes.Meeting UpdateMeeting(ServiceDataTypes.Meeting meeting) {
            return base.Channel.UpdateMeeting(meeting);
        }
        
        public ServiceDataTypes.Meeting[] GetMeetingsInProject(int projectID) {
            return base.Channel.GetMeetingsInProject(projectID);
        }
        
        public ServiceDataTypes.Meeting[] GetMeetingsOnDate(System.DateTime date, int projectID) {
            return base.Channel.GetMeetingsOnDate(date, projectID);
        }
    }
}
