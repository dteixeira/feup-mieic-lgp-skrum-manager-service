//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTester.ProjectService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectService.IProjectService")]
    public interface IProjectService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateProject", ReplyAction="http://tempuri.org/IProjectService/CreateProjectResponse")]
        ServiceDataTypes.Project CreateProject(ServiceDataTypes.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateProject", ReplyAction="http://tempuri.org/IProjectService/UpdateProjectResponse")]
        ServiceDataTypes.Project UpdateProject(ServiceDataTypes.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateProjectPassword", ReplyAction="http://tempuri.org/IProjectService/UpdateProjectPasswordResponse")]
        ServiceDataTypes.Project UpdateProjectPassword(int projectID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteProject", ReplyAction="http://tempuri.org/IProjectService/DeleteProjectResponse")]
        bool DeleteProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetProjectByID", ReplyAction="http://tempuri.org/IProjectService/GetProjectByIDResponse")]
        ServiceDataTypes.Project GetProjectByID(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetProjectByName", ReplyAction="http://tempuri.org/IProjectService/GetProjectByNameResponse")]
        ServiceDataTypes.Project GetProjectByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateSprint", ReplyAction="http://tempuri.org/IProjectService/CreateSprintResponse")]
        ServiceDataTypes.Sprint CreateSprint(ServiceDataTypes.Sprint sprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteSprint", ReplyAction="http://tempuri.org/IProjectService/DeleteSprintResponse")]
        bool DeleteSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateSprint", ReplyAction="http://tempuri.org/IProjectService/UpdateSprintResponse")]
        ServiceDataTypes.Sprint UpdateSprint(ServiceDataTypes.Sprint sprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetSprintByID", ReplyAction="http://tempuri.org/IProjectService/GetSprintByIDResponse")]
        ServiceDataTypes.Sprint GetSprintByID(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateStory", ReplyAction="http://tempuri.org/IProjectService/CreateStoryResponse")]
        ServiceDataTypes.Story CreateStory(ServiceDataTypes.Story story);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteStory", ReplyAction="http://tempuri.org/IProjectService/DeleteStoryResponse")]
        bool DeleteStory(int storyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateStory", ReplyAction="http://tempuri.org/IProjectService/UpdateStoryResponse")]
        ServiceDataTypes.Story UpdateStory(ServiceDataTypes.Story story);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetStoryByID", ReplyAction="http://tempuri.org/IProjectService/GetStoryByIDResponse")]
        ServiceDataTypes.Story GetStoryByID(int storyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateTask", ReplyAction="http://tempuri.org/IProjectService/CreateTaskResponse")]
        ServiceDataTypes.Task CreateTask(ServiceDataTypes.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteTask", ReplyAction="http://tempuri.org/IProjectService/DeleteTaskResponse")]
        bool DeleteTask(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateTask", ReplyAction="http://tempuri.org/IProjectService/UpdateTaskResponse")]
        ServiceDataTypes.Task UpdateTask(ServiceDataTypes.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetTaskByID", ReplyAction="http://tempuri.org/IProjectService/GetTaskByIDResponse")]
        ServiceDataTypes.Task GetTaskByID(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateMeeting", ReplyAction="http://tempuri.org/IProjectService/CreateMeetingResponse")]
        ServiceDataTypes.Meeting CreateMeeting(ServiceDataTypes.Meeting meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteMeeting", ReplyAction="http://tempuri.org/IProjectService/DeleteMeetingResponse")]
        bool DeleteMeeting(int meetingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateMeeting", ReplyAction="http://tempuri.org/IProjectService/UpdateMeetingResponse")]
        ServiceDataTypes.Meeting UpdateMeeting(ServiceDataTypes.Meeting meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetMeetingByID", ReplyAction="http://tempuri.org/IProjectService/GetMeetingByIDResponse")]
        ServiceDataTypes.Meeting GetMeetingByID(int meetingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/LoginProject", ReplyAction="http://tempuri.org/IProjectService/LoginProjectResponse")]
        bool LoginProject(int projectID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllSprintsInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllSprintsInProjectResponse")]
        ServiceDataTypes.Sprint[] GetAllSprintsInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllStoriesInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllStoriesInProjectResponse")]
        ServiceDataTypes.Story[] GetAllStoriesInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllTasksInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllTasksInProjectResponse")]
        ServiceDataTypes.Task[] GetAllTasksInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllStoriesWithoutSprintInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllStoriesWithoutSprintInProjectResponse")]
        ServiceDataTypes.Story[] GetAllStoriesWithoutSprintInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllMeetingsInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllMeetingsInProjectResponse")]
        ServiceDataTypes.Meeting[] GetAllMeetingsInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllTasksInProjectByState", ReplyAction="http://tempuri.org/IProjectService/GetAllTasksInProjectByStateResponse")]
        ServiceDataTypes.Task[] GetAllTasksInProjectByState(int projectID, ServiceDataTypes.TaskState state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllStoriesInProjectByState", ReplyAction="http://tempuri.org/IProjectService/GetAllStoriesInProjectByStateResponse")]
        ServiceDataTypes.Story[] GetAllStoriesInProjectByState(int projectID, ServiceDataTypes.StoryState state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllStoriesInSprint", ReplyAction="http://tempuri.org/IProjectService/GetAllStoriesInSprintResponse")]
        ServiceDataTypes.Story[] GetAllStoriesInSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllTasksInSprint", ReplyAction="http://tempuri.org/IProjectService/GetAllTasksInSprintResponse")]
        ServiceDataTypes.Task[] GetAllTasksInSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/AddStoryInSprint", ReplyAction="http://tempuri.org/IProjectService/AddStoryInSprintResponse")]
        ServiceDataTypes.StorySprint AddStoryInSprint(ServiceDataTypes.StorySprint storySprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllTasksInStory", ReplyAction="http://tempuri.org/IProjectService/GetAllTasksInStoryResponse")]
        ServiceDataTypes.Task[] GetAllTasksInStory(int storyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateStoryOrder", ReplyAction="http://tempuri.org/IProjectService/UpdateStoryOrderResponse")]
        ServiceDataTypes.Story[] UpdateStoryOrder(int projectID, int[] ordered);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/AddWorkInTask", ReplyAction="http://tempuri.org/IProjectService/AddWorkInTaskResponse")]
        ServiceDataTypes.PersonTask AddWorkInTask(ServiceDataTypes.PersonTask personTask);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectServiceChannel : ServiceTester.ProjectService.IProjectService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectServiceClient : System.ServiceModel.ClientBase<ServiceTester.ProjectService.IProjectService>, ServiceTester.ProjectService.IProjectService {
        
        public ProjectServiceClient() {
        }
        
        public ProjectServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceDataTypes.Project CreateProject(ServiceDataTypes.Project project) {
            return base.Channel.CreateProject(project);
        }
        
        public ServiceDataTypes.Project UpdateProject(ServiceDataTypes.Project project) {
            return base.Channel.UpdateProject(project);
        }
        
        public ServiceDataTypes.Project UpdateProjectPassword(int projectID, string password) {
            return base.Channel.UpdateProjectPassword(projectID, password);
        }
        
        public bool DeleteProject(int projectID) {
            return base.Channel.DeleteProject(projectID);
        }
        
        public ServiceDataTypes.Project GetProjectByID(int projectID) {
            return base.Channel.GetProjectByID(projectID);
        }
        
        public ServiceDataTypes.Project GetProjectByName(string name) {
            return base.Channel.GetProjectByName(name);
        }
        
        public ServiceDataTypes.Sprint CreateSprint(ServiceDataTypes.Sprint sprint) {
            return base.Channel.CreateSprint(sprint);
        }
        
        public bool DeleteSprint(int sprintID) {
            return base.Channel.DeleteSprint(sprintID);
        }
        
        public ServiceDataTypes.Sprint UpdateSprint(ServiceDataTypes.Sprint sprint) {
            return base.Channel.UpdateSprint(sprint);
        }
        
        public ServiceDataTypes.Sprint GetSprintByID(int sprintID) {
            return base.Channel.GetSprintByID(sprintID);
        }
        
        public ServiceDataTypes.Story CreateStory(ServiceDataTypes.Story story) {
            return base.Channel.CreateStory(story);
        }
        
        public bool DeleteStory(int storyID) {
            return base.Channel.DeleteStory(storyID);
        }
        
        public ServiceDataTypes.Story UpdateStory(ServiceDataTypes.Story story) {
            return base.Channel.UpdateStory(story);
        }
        
        public ServiceDataTypes.Story GetStoryByID(int storyID) {
            return base.Channel.GetStoryByID(storyID);
        }
        
        public ServiceDataTypes.Task CreateTask(ServiceDataTypes.Task task) {
            return base.Channel.CreateTask(task);
        }
        
        public bool DeleteTask(int taskID) {
            return base.Channel.DeleteTask(taskID);
        }
        
        public ServiceDataTypes.Task UpdateTask(ServiceDataTypes.Task task) {
            return base.Channel.UpdateTask(task);
        }
        
        public ServiceDataTypes.Task GetTaskByID(int taskID) {
            return base.Channel.GetTaskByID(taskID);
        }
        
        public ServiceDataTypes.Meeting CreateMeeting(ServiceDataTypes.Meeting meeting) {
            return base.Channel.CreateMeeting(meeting);
        }
        
        public bool DeleteMeeting(int meetingID) {
            return base.Channel.DeleteMeeting(meetingID);
        }
        
        public ServiceDataTypes.Meeting UpdateMeeting(ServiceDataTypes.Meeting meeting) {
            return base.Channel.UpdateMeeting(meeting);
        }
        
        public ServiceDataTypes.Meeting GetMeetingByID(int meetingID) {
            return base.Channel.GetMeetingByID(meetingID);
        }
        
        public bool LoginProject(int projectID, string password) {
            return base.Channel.LoginProject(projectID, password);
        }
        
        public ServiceDataTypes.Sprint[] GetAllSprintsInProject(int projectID) {
            return base.Channel.GetAllSprintsInProject(projectID);
        }
        
        public ServiceDataTypes.Story[] GetAllStoriesInProject(int projectID) {
            return base.Channel.GetAllStoriesInProject(projectID);
        }
        
        public ServiceDataTypes.Task[] GetAllTasksInProject(int projectID) {
            return base.Channel.GetAllTasksInProject(projectID);
        }
        
        public ServiceDataTypes.Story[] GetAllStoriesWithoutSprintInProject(int projectID) {
            return base.Channel.GetAllStoriesWithoutSprintInProject(projectID);
        }
        
        public ServiceDataTypes.Meeting[] GetAllMeetingsInProject(int projectID) {
            return base.Channel.GetAllMeetingsInProject(projectID);
        }
        
        public ServiceDataTypes.Task[] GetAllTasksInProjectByState(int projectID, ServiceDataTypes.TaskState state) {
            return base.Channel.GetAllTasksInProjectByState(projectID, state);
        }
        
        public ServiceDataTypes.Story[] GetAllStoriesInProjectByState(int projectID, ServiceDataTypes.StoryState state) {
            return base.Channel.GetAllStoriesInProjectByState(projectID, state);
        }
        
        public ServiceDataTypes.Story[] GetAllStoriesInSprint(int sprintID) {
            return base.Channel.GetAllStoriesInSprint(sprintID);
        }
        
        public ServiceDataTypes.Task[] GetAllTasksInSprint(int sprintID) {
            return base.Channel.GetAllTasksInSprint(sprintID);
        }
        
        public ServiceDataTypes.StorySprint AddStoryInSprint(ServiceDataTypes.StorySprint storySprint) {
            return base.Channel.AddStoryInSprint(storySprint);
        }
        
        public ServiceDataTypes.Task[] GetAllTasksInStory(int storyID) {
            return base.Channel.GetAllTasksInStory(storyID);
        }
        
        public ServiceDataTypes.Story[] UpdateStoryOrder(int projectID, int[] ordered) {
            return base.Channel.UpdateStoryOrder(projectID, ordered);
        }
        
        public ServiceDataTypes.PersonTask AddWorkInTask(ServiceDataTypes.PersonTask personTask) {
            return base.Channel.AddWorkInTask(personTask);
        }
    }
}
