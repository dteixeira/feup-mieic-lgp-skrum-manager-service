//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTester.DataService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataService.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateProject", ReplyAction="http://tempuri.org/IDataService/CreateProjectResponse")]
        ServiceDataTypes.Project CreateProject(ServiceDataTypes.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateProject", ReplyAction="http://tempuri.org/IDataService/UpdateProjectResponse")]
        ServiceDataTypes.Project UpdateProject(ServiceDataTypes.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateProjectPassword", ReplyAction="http://tempuri.org/IDataService/UpdateProjectPasswordResponse")]
        ServiceDataTypes.Project UpdateProjectPassword(int projectID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteProject", ReplyAction="http://tempuri.org/IDataService/DeleteProjectResponse")]
        bool DeleteProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProjectByID", ReplyAction="http://tempuri.org/IDataService/GetProjectByIDResponse")]
        ServiceDataTypes.Project GetProjectByID(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetProjectByName", ReplyAction="http://tempuri.org/IDataService/GetProjectByNameResponse")]
        ServiceDataTypes.Project GetProjectByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateSprint", ReplyAction="http://tempuri.org/IDataService/CreateSprintResponse")]
        ServiceDataTypes.Sprint CreateSprint(ServiceDataTypes.Sprint sprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteSprint", ReplyAction="http://tempuri.org/IDataService/DeleteSprintResponse")]
        bool DeleteSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateSprint", ReplyAction="http://tempuri.org/IDataService/UpdateSprintResponse")]
        ServiceDataTypes.Sprint UpdateSprint(ServiceDataTypes.Sprint sprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetSprintByID", ReplyAction="http://tempuri.org/IDataService/GetSprintByIDResponse")]
        ServiceDataTypes.Sprint GetSprintByID(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateStory", ReplyAction="http://tempuri.org/IDataService/CreateStoryResponse")]
        ServiceDataTypes.Story CreateStory(ServiceDataTypes.Story story);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteStory", ReplyAction="http://tempuri.org/IDataService/DeleteStoryResponse")]
        bool DeleteStory(int storyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateStory", ReplyAction="http://tempuri.org/IDataService/UpdateStoryResponse")]
        ServiceDataTypes.Story UpdateStory(ServiceDataTypes.Story story);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetStoryByID", ReplyAction="http://tempuri.org/IDataService/GetStoryByIDResponse")]
        ServiceDataTypes.Story GetStoryByID(int storyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateTask", ReplyAction="http://tempuri.org/IDataService/CreateTaskResponse")]
        ServiceDataTypes.Task CreateTask(ServiceDataTypes.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteTask", ReplyAction="http://tempuri.org/IDataService/DeleteTaskResponse")]
        bool DeleteTask(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateTask", ReplyAction="http://tempuri.org/IDataService/UpdateTaskResponse")]
        ServiceDataTypes.Task UpdateTask(ServiceDataTypes.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetTaskByID", ReplyAction="http://tempuri.org/IDataService/GetTaskByIDResponse")]
        ServiceDataTypes.Task GetTaskByID(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateMeeting", ReplyAction="http://tempuri.org/IDataService/CreateMeetingResponse")]
        ServiceDataTypes.Meeting CreateMeeting(ServiceDataTypes.Meeting meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteMeeting", ReplyAction="http://tempuri.org/IDataService/DeleteMeetingResponse")]
        bool DeleteMeeting(int meetingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateMeeting", ReplyAction="http://tempuri.org/IDataService/UpdateMeetingResponse")]
        ServiceDataTypes.Meeting UpdateMeeting(ServiceDataTypes.Meeting meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMeetingByID", ReplyAction="http://tempuri.org/IDataService/GetMeetingByIDResponse")]
        ServiceDataTypes.Meeting GetMeetingByID(int meetingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllProjects", ReplyAction="http://tempuri.org/IDataService/GetAllProjectsResponse")]
        ServiceDataTypes.Project[] GetAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/LoginProject", ReplyAction="http://tempuri.org/IDataService/LoginProjectResponse")]
        bool LoginProject(int projectID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllSprintsInProject", ReplyAction="http://tempuri.org/IDataService/GetAllSprintsInProjectResponse")]
        ServiceDataTypes.Sprint[] GetAllSprintsInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllStoriesInProject", ReplyAction="http://tempuri.org/IDataService/GetAllStoriesInProjectResponse")]
        ServiceDataTypes.Story[] GetAllStoriesInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllTasksInProject", ReplyAction="http://tempuri.org/IDataService/GetAllTasksInProjectResponse")]
        ServiceDataTypes.Task[] GetAllTasksInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllStoriesWithoutSprintInProject", ReplyAction="http://tempuri.org/IDataService/GetAllStoriesWithoutSprintInProjectResponse")]
        ServiceDataTypes.Story[] GetAllStoriesWithoutSprintInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllMeetingsInProject", ReplyAction="http://tempuri.org/IDataService/GetAllMeetingsInProjectResponse")]
        ServiceDataTypes.Meeting[] GetAllMeetingsInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllTasksInProjectByState", ReplyAction="http://tempuri.org/IDataService/GetAllTasksInProjectByStateResponse")]
        ServiceDataTypes.Task[] GetAllTasksInProjectByState(int projectID, ServiceDataTypes.TaskState state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllStoriesInProjectByState", ReplyAction="http://tempuri.org/IDataService/GetAllStoriesInProjectByStateResponse")]
        ServiceDataTypes.Story[] GetAllStoriesInProjectByState(int projectID, ServiceDataTypes.StoryState state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllStoriesInSprint", ReplyAction="http://tempuri.org/IDataService/GetAllStoriesInSprintResponse")]
        ServiceDataTypes.Story[] GetAllStoriesInSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllTasksInSprint", ReplyAction="http://tempuri.org/IDataService/GetAllTasksInSprintResponse")]
        ServiceDataTypes.Task[] GetAllTasksInSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddStoryInSprint", ReplyAction="http://tempuri.org/IDataService/AddStoryInSprintResponse")]
        ServiceDataTypes.StorySprint AddStoryInSprint(ServiceDataTypes.StorySprint storySprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllTasksInStory", ReplyAction="http://tempuri.org/IDataService/GetAllTasksInStoryResponse")]
        ServiceDataTypes.Task[] GetAllTasksInStory(int storyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateStoryOrder", ReplyAction="http://tempuri.org/IDataService/UpdateStoryOrderResponse")]
        ServiceDataTypes.Story[] UpdateStoryOrder(int projectID, int[] ordered);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddWorkInTask", ReplyAction="http://tempuri.org/IDataService/AddWorkInTaskResponse")]
        ServiceDataTypes.PersonTask AddWorkInTask(ServiceDataTypes.PersonTask personTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreatePerson", ReplyAction="http://tempuri.org/IDataService/CreatePersonResponse")]
        ServiceDataTypes.Person CreatePerson(ServiceDataTypes.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdatePerson", ReplyAction="http://tempuri.org/IDataService/UpdatePersonResponse")]
        ServiceDataTypes.Person UpdatePerson(ServiceDataTypes.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdatePersonPassword", ReplyAction="http://tempuri.org/IDataService/UpdatePersonPasswordResponse")]
        ServiceDataTypes.Person UpdatePersonPassword(int personID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeletePerson", ReplyAction="http://tempuri.org/IDataService/DeletePersonResponse")]
        bool DeletePerson(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetPersonByID", ReplyAction="http://tempuri.org/IDataService/GetPersonByIDResponse")]
        ServiceDataTypes.Person GetPersonByID(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetPersonByEmail", ReplyAction="http://tempuri.org/IDataService/GetPersonByEmailResponse")]
        ServiceDataTypes.Person GetPersonByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CreateRole", ReplyAction="http://tempuri.org/IDataService/CreateRoleResponse")]
        ServiceDataTypes.Role CreateRole(ServiceDataTypes.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateRole", ReplyAction="http://tempuri.org/IDataService/UpdateRoleResponse")]
        ServiceDataTypes.Role UpdateRole(ServiceDataTypes.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateRolePassword", ReplyAction="http://tempuri.org/IDataService/UpdateRolePasswordResponse")]
        ServiceDataTypes.Role UpdateRolePassword(int roleID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteRole", ReplyAction="http://tempuri.org/IDataService/DeleteRoleResponse")]
        bool DeleteRole(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetRoleByID", ReplyAction="http://tempuri.org/IDataService/GetRoleByIDResponse")]
        ServiceDataTypes.Role GetRoleByID(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllPeopleInProject", ReplyAction="http://tempuri.org/IDataService/GetAllPeopleInProjectResponse")]
        ServiceDataTypes.Person[] GetAllPeopleInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllRolesInProject", ReplyAction="http://tempuri.org/IDataService/GetAllRolesInProjectResponse")]
        ServiceDataTypes.Role[] GetAllRolesInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllPeople", ReplyAction="http://tempuri.org/IDataService/GetAllPeopleResponse")]
        ServiceDataTypes.Person[] GetAllPeople();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/LoginAdmin", ReplyAction="http://tempuri.org/IDataService/LoginAdminResponse")]
        bool LoginAdmin(int personID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllTasksInPerson", ReplyAction="http://tempuri.org/IDataService/GetAllTasksInPersonResponse")]
        ServiceDataTypes.Task[] GetAllTasksInPerson(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllRolesInPerson", ReplyAction="http://tempuri.org/IDataService/GetAllRolesInPersonResponse")]
        ServiceDataTypes.Role[] GetAllRolesInPerson(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/LoginProjectAdmin", ReplyAction="http://tempuri.org/IDataService/LoginProjectAdminResponse")]
        bool LoginProjectAdmin(int roleID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetAllPeopleWorkingInTask", ReplyAction="http://tempuri.org/IDataService/GetAllPeopleWorkingInTaskResponse")]
        ServiceDataTypes.Person[] GetAllPeopleWorkingInTask(int taskID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : ServiceTester.DataService.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<ServiceTester.DataService.IDataService>, ServiceTester.DataService.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceDataTypes.Project CreateProject(ServiceDataTypes.Project project) {
            return base.Channel.CreateProject(project);
        }
        
        public ServiceDataTypes.Project UpdateProject(ServiceDataTypes.Project project) {
            return base.Channel.UpdateProject(project);
        }
        
        public ServiceDataTypes.Project UpdateProjectPassword(int projectID, string password) {
            return base.Channel.UpdateProjectPassword(projectID, password);
        }
        
        public bool DeleteProject(int projectID) {
            return base.Channel.DeleteProject(projectID);
        }
        
        public ServiceDataTypes.Project GetProjectByID(int projectID) {
            return base.Channel.GetProjectByID(projectID);
        }
        
        public ServiceDataTypes.Project GetProjectByName(string name) {
            return base.Channel.GetProjectByName(name);
        }
        
        public ServiceDataTypes.Sprint CreateSprint(ServiceDataTypes.Sprint sprint) {
            return base.Channel.CreateSprint(sprint);
        }
        
        public bool DeleteSprint(int sprintID) {
            return base.Channel.DeleteSprint(sprintID);
        }
        
        public ServiceDataTypes.Sprint UpdateSprint(ServiceDataTypes.Sprint sprint) {
            return base.Channel.UpdateSprint(sprint);
        }
        
        public ServiceDataTypes.Sprint GetSprintByID(int sprintID) {
            return base.Channel.GetSprintByID(sprintID);
        }
        
        public ServiceDataTypes.Story CreateStory(ServiceDataTypes.Story story) {
            return base.Channel.CreateStory(story);
        }
        
        public bool DeleteStory(int storyID) {
            return base.Channel.DeleteStory(storyID);
        }
        
        public ServiceDataTypes.Story UpdateStory(ServiceDataTypes.Story story) {
            return base.Channel.UpdateStory(story);
        }
        
        public ServiceDataTypes.Story GetStoryByID(int storyID) {
            return base.Channel.GetStoryByID(storyID);
        }
        
        public ServiceDataTypes.Task CreateTask(ServiceDataTypes.Task task) {
            return base.Channel.CreateTask(task);
        }
        
        public bool DeleteTask(int taskID) {
            return base.Channel.DeleteTask(taskID);
        }
        
        public ServiceDataTypes.Task UpdateTask(ServiceDataTypes.Task task) {
            return base.Channel.UpdateTask(task);
        }
        
        public ServiceDataTypes.Task GetTaskByID(int taskID) {
            return base.Channel.GetTaskByID(taskID);
        }
        
        public ServiceDataTypes.Meeting CreateMeeting(ServiceDataTypes.Meeting meeting) {
            return base.Channel.CreateMeeting(meeting);
        }
        
        public bool DeleteMeeting(int meetingID) {
            return base.Channel.DeleteMeeting(meetingID);
        }
        
        public ServiceDataTypes.Meeting UpdateMeeting(ServiceDataTypes.Meeting meeting) {
            return base.Channel.UpdateMeeting(meeting);
        }
        
        public ServiceDataTypes.Meeting GetMeetingByID(int meetingID) {
            return base.Channel.GetMeetingByID(meetingID);
        }
        
        public ServiceDataTypes.Project[] GetAllProjects() {
            return base.Channel.GetAllProjects();
        }
        
        public bool LoginProject(int projectID, string password) {
            return base.Channel.LoginProject(projectID, password);
        }
        
        public ServiceDataTypes.Sprint[] GetAllSprintsInProject(int projectID) {
            return base.Channel.GetAllSprintsInProject(projectID);
        }
        
        public ServiceDataTypes.Story[] GetAllStoriesInProject(int projectID) {
            return base.Channel.GetAllStoriesInProject(projectID);
        }
        
        public ServiceDataTypes.Task[] GetAllTasksInProject(int projectID) {
            return base.Channel.GetAllTasksInProject(projectID);
        }
        
        public ServiceDataTypes.Story[] GetAllStoriesWithoutSprintInProject(int projectID) {
            return base.Channel.GetAllStoriesWithoutSprintInProject(projectID);
        }
        
        public ServiceDataTypes.Meeting[] GetAllMeetingsInProject(int projectID) {
            return base.Channel.GetAllMeetingsInProject(projectID);
        }
        
        public ServiceDataTypes.Task[] GetAllTasksInProjectByState(int projectID, ServiceDataTypes.TaskState state) {
            return base.Channel.GetAllTasksInProjectByState(projectID, state);
        }
        
        public ServiceDataTypes.Story[] GetAllStoriesInProjectByState(int projectID, ServiceDataTypes.StoryState state) {
            return base.Channel.GetAllStoriesInProjectByState(projectID, state);
        }
        
        public ServiceDataTypes.Story[] GetAllStoriesInSprint(int sprintID) {
            return base.Channel.GetAllStoriesInSprint(sprintID);
        }
        
        public ServiceDataTypes.Task[] GetAllTasksInSprint(int sprintID) {
            return base.Channel.GetAllTasksInSprint(sprintID);
        }
        
        public ServiceDataTypes.StorySprint AddStoryInSprint(ServiceDataTypes.StorySprint storySprint) {
            return base.Channel.AddStoryInSprint(storySprint);
        }
        
        public ServiceDataTypes.Task[] GetAllTasksInStory(int storyID) {
            return base.Channel.GetAllTasksInStory(storyID);
        }
        
        public ServiceDataTypes.Story[] UpdateStoryOrder(int projectID, int[] ordered) {
            return base.Channel.UpdateStoryOrder(projectID, ordered);
        }
        
        public ServiceDataTypes.PersonTask AddWorkInTask(ServiceDataTypes.PersonTask personTask) {
            return base.Channel.AddWorkInTask(personTask);
        }
        
        public ServiceDataTypes.Person CreatePerson(ServiceDataTypes.Person person) {
            return base.Channel.CreatePerson(person);
        }
        
        public ServiceDataTypes.Person UpdatePerson(ServiceDataTypes.Person person) {
            return base.Channel.UpdatePerson(person);
        }
        
        public ServiceDataTypes.Person UpdatePersonPassword(int personID, string password) {
            return base.Channel.UpdatePersonPassword(personID, password);
        }
        
        public bool DeletePerson(int personID) {
            return base.Channel.DeletePerson(personID);
        }
        
        public ServiceDataTypes.Person GetPersonByID(int personID) {
            return base.Channel.GetPersonByID(personID);
        }
        
        public ServiceDataTypes.Person GetPersonByEmail(string email) {
            return base.Channel.GetPersonByEmail(email);
        }
        
        public ServiceDataTypes.Role CreateRole(ServiceDataTypes.Role role) {
            return base.Channel.CreateRole(role);
        }
        
        public ServiceDataTypes.Role UpdateRole(ServiceDataTypes.Role role) {
            return base.Channel.UpdateRole(role);
        }
        
        public ServiceDataTypes.Role UpdateRolePassword(int roleID, string password) {
            return base.Channel.UpdateRolePassword(roleID, password);
        }
        
        public bool DeleteRole(int roleID) {
            return base.Channel.DeleteRole(roleID);
        }
        
        public ServiceDataTypes.Role GetRoleByID(int roleID) {
            return base.Channel.GetRoleByID(roleID);
        }
        
        public ServiceDataTypes.Person[] GetAllPeopleInProject(int projectID) {
            return base.Channel.GetAllPeopleInProject(projectID);
        }
        
        public ServiceDataTypes.Role[] GetAllRolesInProject(int projectID) {
            return base.Channel.GetAllRolesInProject(projectID);
        }
        
        public ServiceDataTypes.Person[] GetAllPeople() {
            return base.Channel.GetAllPeople();
        }
        
        public bool LoginAdmin(int personID, string password) {
            return base.Channel.LoginAdmin(personID, password);
        }
        
        public ServiceDataTypes.Task[] GetAllTasksInPerson(int personID) {
            return base.Channel.GetAllTasksInPerson(personID);
        }
        
        public ServiceDataTypes.Role[] GetAllRolesInPerson(int personID) {
            return base.Channel.GetAllRolesInPerson(personID);
        }
        
        public bool LoginProjectAdmin(int roleID, string password) {
            return base.Channel.LoginProjectAdmin(roleID, password);
        }
        
        public ServiceDataTypes.Person[] GetAllPeopleWorkingInTask(int taskID) {
            return base.Channel.GetAllPeopleWorkingInTask(taskID);
        }
    }
}
